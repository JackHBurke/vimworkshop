----------------
TRICKY COOL ADVANCED THINGS

----------------
Registers
    
    Hit "<letter>yy to yank line to register <letter> (You can also use y, or select blocks of text, etc...)
    Hit "<letter>p to yank to register <letter>

----------------
Specialty Registers
+ - System clipboard (Super useful when copying /pasting to clipboard)
_ - The BLACKHOLE, register just sends whatever to oblivion.


---------------
EXERCISE
You have two things, and want to copy both and paste them in other places in that order! 
This isn't an ordinary text editor though, you've got /registers/, man.

Copy this line into a register
Copy this line into another register
(Now paste them around)

What's in your system clipboard right now? Let's find out! (paste it below and share with your friends)

...What other sick things can I do with registers though?

---------------
MACROS

but wait, let's first learn how to increment/decrement a number

---------------
INCREMENTING AND DECREMENTING

<C-x> decrements
<C-a> Increments (Note: If you are using tmux and you have a bound like a smart person
                  Than unfortunately you'll have to hit a twice.)

----------------
EXERCISE

Increment this number: 0

---------------
BACK TO RECORDINGS

Saving a Recording
If you hit <q><register> followed by a sequence of keys then <q> once more to end the recording, all your
actions will be saved to <register>

PLAYING BACK A RECORDING
hit @<register> 
(NOTE: You can repeat this macro, for instance, 50 times by hitting 50@<register>)

---------------
EXERCISE

Record a macro which:
    - Copies the current line 
    - Increments the number found in the line
    - Do it 50 times

This is line number 1!

WINDOWS AND BUFFERS
----------------
You'll inevitably end up opening multiple buffers in vim, so it'd probably be useful to be able to
browse  between them, huh?

To open up a new buffer type :bn
To see your list of current buffers type :ls (NOTE: You can find a plugin which makes this functionality nicer..)
To switch between buffers type :b<number of buffer>

----------------
EXERCISE

1) Open a new buffer
2) :ls to see your new buffer

---------------
WINDOWS

Buffers are only sort of useful if you can't view things side-by-side 
(or up-and-down, or tiled as many times as you like)
Luckily, vim allows you to open seperate windows to your buffers!

NOTE: These require a magic touch. With one finger on control hit w, release control then hit the next key
<C-w-v> or :vsplit opens a new vertical split
<C-w-s> or :hsplit or :split Opens up a new horizontal split
<C-w-c> Closes a split
<C-w-|> Maximizes a split horizontally (Note that it looks like a bar! Which is a way of remember it sorta I guess)
<C-w-_> Maximizes a split vertically (Same dumb way of remembering it as above)
<C-w-=> Makes all your splits equal in size
<C-w-h>, <C-w-j>, <C-w-k>, <C-w-l> Move between windows, just like hjkl move within a buffer
<C-w-H>, <C-w-J>, <C-w-K>,<C-w-L> Move the windows around in the direction you hit (Note that HJKL are caps'd)

---------------
EXERCISE

Make some windows! Use those buffers you made and place them around in nice ways. Open up a couple new files or
whatnot. Tile it up dude!

"Yeah, but what if I want a different way of viewing all my buffers?"A

---------------
TABS

:tabnew - Create a new tab
gt and gT - Move back and forth between tabs

---------------
EXERCISE

Stylize your vim buffers! Make two tabs with different views!



